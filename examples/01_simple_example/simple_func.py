#!/usr/bin/env python
"""
Simple line function with given a and b.

Usage:
  {0:s} [options]

Options:
  -h, --help  Show this message and exit.
  --gen-ref   Generate reference data with a given parameters.
  --param-file FILE
              Parameter file for reading a and b. [default: in.params.simple]
"""
from __future__ import print_function

import os,sys
from docopt import docopt
import numpy as np

__author__ = "RYO KOBAYASHI"
__version__ = "221223"

_a = 1.0
_b = 0.0

def line(x,a,b):
    return a*x +b

def main():
    args = docopt(__doc__.format(os.path.basename(sys.argv[0])))
    infile = args['--param-file']
    gen_ref = args['--gen-ref']

    xs = np.linspace(-1.0,1.0,100)

    if gen_ref:
        rng = np.random.RandomState(42)
        ys = line(xs,_a,_b) + 0.1*rng.randn(len(xs))
        with open('data.ref.simple','w') as f:
            f.write('# data generated by simple_func.py --gen-ref\n')
            f.write('#\n')
            f.write('  {0:d} 1.00\n'.format(len(ys)))
            for i,y in enumerate(ys):
                f.write(f'  {y:6.3f}')
                if (i+1)%6 == 0:
                    f.write('\n')
            f.write('\n')
    else:
        with open(infile,'r') as f:
            lines = f.readlines()
        for i,l in enumerate(lines):
            if l[0] == '#':
                continue
            data = l.split()
            if len(data) == 2:
                a = float(data[0])
                b = float(data[1])
        ys = line(xs,a,b)

        with open('data.opt.simple','w') as f:
            f.write('# data obtained with {0}\n'.format(infile))
            f.write('#\n')
            f.write('  {0:d} 1.00\n'.format(len(ys)))
            for i,y in enumerate(ys):
                f.write(f'  {y:6.3f}')
                if (i+1)%6 == 0:
                    f.write('\n')
            f.write('\n')
    return None
    

if __name__ == "__main__":

    main()
